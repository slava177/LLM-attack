`low_cpu_mem_usage` was None, now default to True since model is quantized.
Sliding Window Attention is enabled but not implemented for `sdpa`; unexpected results may be encountered.
Loading checkpoint shards:   0%|          | 0/8 [00:00<?, ?it/s]Loading checkpoint shards:  12%|█▎        | 1/8 [00:03<00:25,  3.60s/it]Loading checkpoint shards:  25%|██▌       | 2/8 [00:07<00:20,  3.48s/it]Loading checkpoint shards:  38%|███▊      | 3/8 [00:10<00:17,  3.45s/it]Loading checkpoint shards:  50%|█████     | 4/8 [00:13<00:13,  3.48s/it]Loading checkpoint shards:  62%|██████▎   | 5/8 [00:17<00:10,  3.46s/it]Loading checkpoint shards:  75%|███████▌  | 6/8 [00:20<00:06,  3.45s/it]Loading checkpoint shards:  88%|████████▊ | 7/8 [00:24<00:03,  3.54s/it]Loading checkpoint shards: 100%|██████████| 8/8 [00:26<00:00,  3.04s/it]Loading checkpoint shards: 100%|██████████| 8/8 [00:26<00:00,  3.31s/it]
Map:   0%|          | 0/468 [00:00<?, ? examples/s]Map: 100%|██████████| 468/468 [00:00<00:00, 32770.19 examples/s]
Map:   0%|          | 0/52 [00:00<?, ? examples/s]Map: 100%|██████████| 52/52 [00:00<00:00, 18185.93 examples/s]
Map:   0%|          | 0/468 [00:00<?, ? examples/s]Map: 100%|██████████| 468/468 [00:00<00:00, 2894.04 examples/s]Map: 100%|██████████| 468/468 [00:00<00:00, 2824.49 examples/s]
Map:   0%|          | 0/52 [00:00<?, ? examples/s]Map: 100%|██████████| 52/52 [00:00<00:00, 2623.99 examples/s]
No label_names provided for model class `PeftModelForCausalLM`. Since `PeftModel` hides base models input arguments, if label_names is not given, label_names can't be set automatically within `Trainer`. Note that empty label_names list will be used instead.
start training 

  0%|          | 0/870 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/ziyizhan/code/LLM-attack/LLM-finetune/new_lora.py", line 109, in <module>
    trainer.train()
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 2241, in train
    return inner_training_loop(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 2548, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 3698, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 3759, in compute_loss
    outputs = model(**inputs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
    return model_forward(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
    return convert_to_fp32(self.model_forward(*args, **kwargs))
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/amp/autocast_mode.py", line 16, in decorate_autocast
    return func(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/peft/peft_model.py", line 1719, in forward
    return self.base_model(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/peft/tuners/tuners_utils.py", line 197, in forward
    return self.model.forward(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/utils/deprecation.py", line 172, in wrapped_func
    return func(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 856, in forward
    outputs = self.model(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 579, in forward
    layer_outputs = decoder_layer(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 276, in forward
    hidden_states = self.mlp(hidden_states)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 57, in forward
    down_proj = self.down_proj(self.act_fn(self.gate_proj(x)) * self.up_proj(x))
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/peft/tuners/lora/bnb.py", line 496, in forward
    result = self.base_layer(x, *args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/bitsandbytes/nn/modules.py", line 484, in forward
    return bnb.matmul_4bit(x, self.weight.t(), bias=bias, quant_state=self.weight.quant_state).to(inp_dtype)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/bitsandbytes/autograd/_functions.py", line 533, in matmul_4bit
    return MatMul4Bit.apply(A, B, out, bias, quant_state)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/autograd/function.py", line 539, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/bitsandbytes/autograd/_functions.py", line 462, in forward
    output = torch.nn.functional.linear(A, F.dequantize_4bit(B, quant_state).to(A.dtype).t(), bias)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 108.00 MiB. GPU 0 has a total capacty of 79.11 GiB of which 106.50 MiB is free. Including non-PyTorch memory, this process has 78.99 GiB memory in use. Of the allocated memory 77.70 GiB is allocated by PyTorch, and 655.54 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
  0%|          | 0/870 [00:00<?, ?it/s]
