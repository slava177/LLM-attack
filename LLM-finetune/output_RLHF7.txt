Sliding Window Attention is enabled but not implemented for `sdpa`; unexpected results may be encountered.
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:03<00:11,  3.76s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:07<00:07,  3.79s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:10<00:03,  3.61s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:12<00:00,  2.75s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:12<00:00,  3.10s/it]
No label_names provided for model class `PeftModelForCausalLM`. Since `PeftModel` hides base models input arguments, if label_names is not given, label_names can't be set automatically within `Trainer`. Note that empty label_names list will be used instead.
Start training
  0%|          | 0/59 [00:00<?, ?it/s]  0%|          | 0/59 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "/home/ziyizhan/code/LLM-attack/LLM-finetune/RLHF.py", line 162, in <module>
    loss = trainer.compute_loss(model, batch)
  File "/home/ziyizhan/code/LLM-attack/LLM-finetune/RLHF.py", line 115, in compute_loss
    rewards_k = model(input_ids=inputs["input_ids_k"], attention_mask=inputs["attention_mask_k"])[0]
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/peft/peft_model.py", line 1719, in forward
    return self.base_model(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/peft/tuners/tuners_utils.py", line 197, in forward
    return self.model.forward(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/utils/deprecation.py", line 172, in wrapped_func
    return func(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 856, in forward
    outputs = self.model(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 579, in forward
    layer_outputs = decoder_layer(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 276, in forward
    hidden_states = self.mlp(hidden_states)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 57, in forward
    down_proj = self.down_proj(self.act_fn(self.gate_proj(x)) * self.up_proj(x))
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/bitsandbytes/nn/modules.py", line 484, in forward
    return bnb.matmul_4bit(x, self.weight.t(), bias=bias, quant_state=self.weight.quant_state).to(inp_dtype)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/bitsandbytes/autograd/_functions.py", line 533, in matmul_4bit
    return MatMul4Bit.apply(A, B, out, bias, quant_state)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/autograd/function.py", line 539, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/bitsandbytes/autograd/_functions.py", line 462, in forward
    output = torch.nn.functional.linear(A, F.dequantize_4bit(B, quant_state).to(A.dtype).t(), bias)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 270.00 MiB. GPU 0 has a total capacty of 79.19 GiB of which 217.06 MiB is free. Including non-PyTorch memory, this process has 78.97 GiB memory in use. Of the allocated memory 76.07 GiB is allocated by PyTorch, and 2.24 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
