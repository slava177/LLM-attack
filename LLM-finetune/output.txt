Sliding Window Attention is enabled but not implemented for `sdpa`; unexpected results may be encountered.
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:05<00:16,  5.44s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:11<00:11,  5.58s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:16<00:05,  5.62s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:19<00:00,  4.38s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:19<00:00,  4.81s/it]
Map:   0%|          | 0/468 [00:00<?, ? examples/s]Map: 100%|██████████| 468/468 [00:00<00:00, 5717.27 examples/s]
Map:   0%|          | 0/52 [00:00<?, ? examples/s]Map: 100%|██████████| 52/52 [00:00<00:00, 15543.32 examples/s]
Map:   0%|          | 0/468 [00:00<?, ? examples/s]Map: 100%|██████████| 468/468 [00:00<00:00, 2882.29 examples/s]Map: 100%|██████████| 468/468 [00:00<00:00, 2830.40 examples/s]
Map:   0%|          | 0/52 [00:00<?, ? examples/s]Map: 100%|██████████| 52/52 [00:00<00:00, 3103.22 examples/s]
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
No label_names provided for model class `PeftModelForCausalLM`. Since `PeftModel` hides base models input arguments, if label_names is not given, label_names can't be set automatically within `Trainer`. Note that empty label_names list will be used instead.
  0%|          | 0/590 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/ziyizhan/code/LLM-attack/LLM-finetune/Lora.py", line 93, in <module>
    trainer.train()
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 2241, in train
    return inner_training_loop(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 2548, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 3698, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/trainer.py", line 3759, in compute_loss
    outputs = model(**inputs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/peft/peft_model.py", line 1719, in forward
    return self.base_model(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/peft/tuners/tuners_utils.py", line 197, in forward
    return self.model.forward(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/utils/deprecation.py", line 172, in wrapped_func
    return func(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 856, in forward
    outputs = self.model(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 579, in forward
    layer_outputs = decoder_layer(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 260, in forward
    hidden_states, self_attn_weights = self.self_attn(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 192, in forward
    attn_output, attn_weights = attention_interface(
  File "/home/ziyizhan/code/LLM_attack_env/lib64/python3.9/site-packages/transformers/integrations/sdpa_attention.py", line 53, in sdpa_attention_forward
    attn_output = torch.nn.functional.scaled_dot_product_attention(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 320.00 MiB. GPU 0 has a total capacty of 79.11 GiB of which 150.50 MiB is free. Including non-PyTorch memory, this process has 78.95 GiB memory in use. Of the allocated memory 78.14 GiB is allocated by PyTorch, and 161.29 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
  0%|          | 0/590 [00:10<?, ?it/s]
